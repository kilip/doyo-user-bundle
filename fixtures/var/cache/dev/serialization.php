<?php

/*
 * This file is part of the DoyoUserBundle project.
 *
 * (c) Anthonius Munthi <me@itstoni.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

// This file has been auto-generated by the Symfony Cache Component.

return [[
    'Doyo_UserBundle_Model_User' => 0,
], [
    0 => static function () {
        return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
            $o = [
                clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
                clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
                clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            ],
            null,
            [
                'stdClass' => [
                    'name' => [
                        'Doyo\\UserBundle\\Model\\User',
                        'id',
                        'username',
                        'email',
                        'enabled',
                        'salt',
                        'password',
                        'plainPassword',
                        'lastLogin',
                        'confirmationToken',
                        'passwordRequestedAt',
                        'groups',
                        'roles',
                        'passwordRequestNonExpired',
                        'role',
                    ],
                    'attributesMetadata' => [
                        [
                            'id'                        => $o[1],
                            'username'                  => $o[2],
                            'email'                     => $o[3],
                            'enabled'                   => $o[4],
                            'salt'                      => $o[5],
                            'password'                  => $o[6],
                            'plainPassword'             => $o[7],
                            'lastLogin'                 => $o[8],
                            'confirmationToken'         => $o[9],
                            'passwordRequestedAt'       => $o[10],
                            'groups'                    => $o[11],
                            'roles'                     => $o[12],
                            'passwordRequestNonExpired' => $o[13],
                            'role'                      => $o[14],
                        ],
                    ],
                    'groups' => [
                        2 => [
                            'read',
                            'write',
                        ],
                        [
                            'read',
                            'write',
                        ],
                        [
                            'read',
                            'write',
                        ],
                        [
                            'write',
                        ],
                        7 => [
                            'write',
                        ],
                        [
                            'read',
                            'write',
                        ],
                        [
                            'write',
                        ],
                        11 => [
                            'read',
                            'write',
                        ],
                        [
                            'read',
                            'write',
                        ],
                    ],
                ],
            ],
            $o[0],
            []
        );
    },
]];
