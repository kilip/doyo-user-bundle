resources:
  "%doyo_user.user_class%":
    shortname: "User"
    description: User api
    imports:
      - { resource: "%kernel.project_dir%/config/doyo_resource.yml" }
    attributes:
      order: { username: asc }
      validation_groups: ["default", "change-password", "password"]
      normalization_context: { groups: ["read"] }
      denormalization_context: { groups: ["write"] }

    collectionOperations:
      # list existing users
      get:
        access_control: is_granted('DOYO_USER_LIST')
        validation_groups: ["default"]

      # creates new user
      post:
        access_control: is_granted('DOYO_USER_CREATE')
        validation_groups: ["default"]

      # register a new user with an anonymous account
      register:
        route_name: doyo_user.register
        validation_groups: ["default", "password"]
        access_control: is_granted('DOYO_USER_REGISTER')

      # change password for a user
      change_password:
        route_name: doyo_user.change_password
        access_control: is_granted('DOYO_PROFILE_CHANGE_PASSWORD')
        validation_groups: ["password", "change-password"]

    itemOperations:
      # read info for existing user
      get:
        validation_groups: ["default"]
        access_control: is_granted('DOYO_USER_READ')

      # update existing user
      put:
        validation_groups: ["default"]
        access_control: is_granted('DOYO_USER_UPDATE')

      # delete existing user
      delete:
        access_control: is_granted('DOYO_USER_DELETE')

      reset_password:
        description: "Hello World"
        method: POST
        access_control: is_granted("IS_AUTHENTICATED_ANONYMOUSLY")
        path: /reset-password/foo/{token}
        normalization_context: { groups: ["password"] }
        controller: Doyo\UserBundle\Controller\ResetPasswordController
        defaults:
          method: testNewPassword
